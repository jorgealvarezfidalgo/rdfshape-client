{"version":3,"sources":["API.js","RDFShapeNavbar.js","NotFound.js","About.js","Home.js","ByURL.js","ByFile.js","ByText.js","InputTabs.js","SelectFormat.js","InputTabsWithFormat.js","DataTabs.js","Code.js","Permalink.js","Utils.js","ResultDataInfo.js","DataInfo.js","ResultDataConvert.js","DataConvert.js","SelectGraphFormat.js","ShowSVG.js","DataVisualize.js","Cyto.js","CytoVisualize.js","QueryTabs.js","ResultQuery.js","DataQuery.js","NodeSelector.js","DataExtract.js","EndpointInput.js","EndpointInfo.js","EndpointQuery.js","EndpointExtract.js","ShExTabs.js","ShExInfo.js","ShapeMapTabs.js","ResultValidate.js","ShExValidate.js","ShExConvert.js","ShExVisualize.js","ShEx2SHACL.js","SHACLTabs.js","SHACLInfo.js","SHACLValidate.js","SHACLConvert.js","SHACL2ShEx.js","WikidataValidate.js","WikidataQuery.js","WikidataExtract.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["API","dataInfo","rootApi","dataConvert","dataVisualize","dataFormats","dataQuery","dataExtract","dataVisualFormats","endpointQuery","shExFormats","shapeMapFormats","schemaValidate","dataInfoRoute","dataConvertRoute","dataVisualizeRoute","cytoVisualizeRoute","dataExtractRoute","dataQueryRoute","endpointInfoRoute","endpointExtractRoute","endpointQueryRoute","shExInfoRoute","shExConvertRoute","shExVisualizeRoute","shEx2ShaclRoute","shExValidateRoute","shaclInfoRoute","shaclConvertRoute","shacl2ShExRoute","shaclValidateRoute","wikidataQueryRoute","wikidataValidateRoute","wikidataExtractRoute","aboutRoute","RDFShapeNavbar","bg","expand","filled","variant","Brand","href","Toggle","aria-controls","Collapse","id","className","title","Item","React","Component","NotFound","About","process","Home","ByURL","props","state","urlValue","handleChange","bind","e","this","setState","target","value","handleUrlChange","Group","Label","name","Control","type","onChange","placeholder","defaultProps","ByFile","selectedFile","handleFileUpload","files","loaded","as","ByText","textAreaValue","handleByTextChange","rows","InputTabs","activeTab","handleTabChange","console","log","JSON","stringify","activeKey","transition","onSelect","eventKey","byTextName","byTextPlaceholder","byURLName","byUrlPlaceholder","byFileName","byUrlName","SelectFormat","formats","format","defaultFormat","handleFormatChange","url","urlFormats","axios","get","then","response","data","map","key","defaultValue","InputTabsWithFormat","nameInputTab","nameFormat","DataTabs","textPlaceholder","handleDataUrlChange","dataUrl","byURLPlaceholder","dataFormat","handleDataFormatChange","require","Code","options","mode","theme","lineNumbers","editor","mkPermalink","route","params","newUrl","port","window","location","protocol","hostname","getHost","qs","params2Form","formData","FormData","Object","keys","forEach","append","Permalink","Module","render","mkMode","toLowerCase","dataParamsFromQueryParams","newParams","paramsFromStateData","dataActiveTab","dataTextArea","dataFile","ResultDataInfo","result","msg","error","numberStatements","permalink","DataInfo","handleSubmit","search","queryParams","parse","dataParams","infoUrl","catch","event","post","preventDefault","fluid","onSubmit","ResultDataConvert","DataConvert","targetDataFormat","handleTargetDataFormatChange","maybe","obj","SelectGraphFormat","selected","default","ShowSVG","border","dangerouslySetInnerHTML","__html","svg","DataVisualize","targetGraphFormat","handleTargetGraphFormatChange","processData","targetFormat","convertDot","dot","engine","viz","Viz","renderSVGElement","outerHTML","graphFormat","Cyto","layout","layoutName","elements","style","width","height","backgroundColor","random","CytoVisualize","loading","changeLayout","isLoading","color","onClick","QueryTabs","ResultQuery","DataQuery","queryActiveTab","queryTextArea","queryUrl","queryFile","handleTabChangeData","handleByTextChangeData","handleUrlChangeData","handleByTextChangeQuery","handleTabChangeQuery","handleUrlChangeQuery","paramsData","paramsQuery","paramsFromStateQuery","form","handleDataFileUploadData","handleFormatChangeData","handleFileUploadQuery","NodeSelector","DataExtract","textAreaValueQuery","activeTabQuery","defaultDataFormat","EndpointInput","EndpointInfo","EndpointQuery","endpointUrl","handleEndpointChange","EndpointExtract","ShExTabs","handleShExFormatChange","shExFormat","ShExInfo","ShapeMapTabs","shapeMapFormat","handleShapeMapFormatChange","ResultValidate","ShExValidate","shExTextArea","shExUrl","shExFile","shExActiveTab","shapeMapTextArea","shapeMapUrl","shapeMapFile","shapeMapActiveTab","changeDataTextArea","changeDataTab","changeDataFormat","changeShExTextArea","changeShExTab","changeShExFormat","changeShapeMapTextArea","changeShapeMapTab","changeShapeMapFormat","ShExConvert","ShExVisualize","ShEx2SHACL","SHACLTabs","SHACLInfo","SHACLValidate","SHACLConvert","SHACL2ShEx","WikidataValidate","WikidataQuery","WikidataExtract","Routes","path","exact","component","App","Boolean","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a11ebe2.chunk.js","sourcesContent":["class API {\n    static rootApi = \"http://localhost:8080/api/\";\n\n    static dataInfo =           API.rootApi + \"data/info\" ;\n    static dataConvert =        API.rootApi + \"data/convert\";\n    static dataVisualize =      API.rootApi + \"data/visualize\";\n    static dataFormats =        API.rootApi + \"data/formats\";\n    static dataQuery =          API.rootApi + \"data/query\";\n    static dataExtract =        API.rootApi + \"data/extract\";\n    static dataVisualFormats =  API.rootApi + \"data/visualize/formats\";\n    static endpointQuery =      API.rootApi + \"endpoint/query\";\n    static shExFormats =        API.rootApi + \"shex/formats\";\n    static shapeMapFormats =    API.rootApi + \"shapeMap/formats\";\n    static schemaValidate =     API.rootApi + \"schema/validate\";\n\n    static dataInfoRoute        = \"/dataInfo\" ;\n    static dataConvertRoute     = \"/dataConvert\" ;\n    static dataVisualizeRoute   = \"/dataVisualize\" ;\n    static cytoVisualizeRoute   = \"/cytoVisualize\" ;\n    static dataExtractRoute     = \"/dataExtract\" ;\n    static dataQueryRoute       = \"/dataQuery\" ;\n\n    static endpointInfoRoute        = \"/endpointInfo\" ;\n    static endpointExtractRoute     = \"/endpointExtract\" ;\n    static endpointQueryRoute       = \"/endpointQuery\" ;\n\n    static shExInfoRoute        = \"/shExInfo\" ;\n    static shExConvertRoute     = \"/shExConvert\" ;\n    static shExVisualizeRoute   = \"/shExVisualize\" ;\n    static shEx2ShaclRoute      = \"/shEx2Shacl\" ;\n    static shExValidateRoute    = \"/shExValidate\" ;\n\n    static shaclInfoRoute       = \"/shaclInfo\" ;\n    static shaclConvertRoute    = \"/shaclConvert\" ;\n    static shacl2ShExRoute      = \"/shacl2ShEx\" ;\n    static shaclValidateRoute   = \"/shaclValidate\" ;\n\n    static wikidataQueryRoute    = \"/wikidataQuery\" ;\n    static wikidataValidateRoute = \"/wikidataValidate\" ;\n    static wikidataExtractRoute  = \"/wikidataExtract\" ;\n\n    static aboutRoute           = \"/about\" ;\n\n}\n\nexport default API;\n","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport API from './API.js'\n\n\nclass RDFShapeNavbar extends React.Component {\n\n    render() {\n        return (\n            <Navbar bg=\"primary\" expand=\"md\" filled=\"true\" variant=\"dark\">\n                <Navbar.Brand href=\"/\">RDFShape</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <NavDropdown title=\"Data\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href={API.dataInfoRoute}>Info</NavDropdown.Item>\n                            <NavDropdown.Item href={API.dataConvertRoute}>Convert</NavDropdown.Item>\n                            <NavDropdown.Item href={API.dataVisualizeRoute}>Visualize (Graphviz)</NavDropdown.Item>\n                            <NavDropdown.Item href={API.cytoVisualizeRoute}>Visualize (Cytoscape)</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/dataQuery\">Query</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/dataExtract\">Extract ShEx</NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"Endpoint\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"/endpointInfo\">Endpoint Info</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/endpointQuery\">Query</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/endpointExtract\">Extract ShEx</NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"ShEx\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"/shexValidate\">Validate data with ShEx</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/shexInfo\">Info about ShEx schema</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/shexVisualize\">Visualize ShEx schema</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/shexConvert\">Convert ShEx formats</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/shex2shacl\">ShEx &#8594; SHACL</NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"SHACL\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"/shaclValidate\">Validate data with ShEx</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/shaclConvert\">Convert ShEx formats</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/shacl2shex\">SHACL &#8594; ShEx</NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"Wikidata\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"/wikidataQuery\">Query</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/wikidataExtract\">Extract ShEx</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Nav>\n                        <NavDropdown title=\"Help\" id=\"basic-nav-dropdown\" className=\"mr-sm-2\">\n                            <NavDropdown.Item href=\"https://app.swaggerhub.com/apis-docs/labra/rdfshape/1.0.1\">API\n                                Docs</NavDropdown.Item>\n                            <NavDropdown.Item\n                                href=\"https://github.com/labra/rdfshape/wiki/RDFShape---Help\">Help</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/about\">About</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default RDFShapeNavbar;\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\n\nfunction NotFound() {\n return (\n     <Jumbotron>\n         <h1>Not found</h1>\n             <Button variant=\"primary\" href=\"/\">Go Home</Button>\n     </Jumbotron>\n )\n}\n\nexport default NotFound;\n","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from 'react-bootstrap/Container';\n\nclass About extends React.Component {\n render() {\n     return (\n       <Container>\n         <h1>About RDFShape</h1>\n           <p>Main author: <a href=\"http://labra.weso.es\">Jose Emilio Labra Gayo</a> (<a href=\"http://www.weso.es\">WESO research group</a>)</p>\n           <p>Paper describing RDFShape: <a href=\"http://ceur-ws.org/Vol-2180/paper-35.pdf\">RDFShape: An RDF playground based on Shapes</a>,\n               {' '}\n               <a href=\"http://labra.weso.es\">Jose Emilio Labra Gayo</a>, Daniel Fernández Álvarez, Herminio García González,\n               {' '}\n               Demo presented at <a href=\"http://iswc2018.semanticweb.org/\">International Semantic Web Conference</a>, Monterey, California - 2018\n            </p>\n            <ul>\n            <li>RDFShape Version {process.env.REACT_APP_VERSION} [{process.env.NODE_ENV}]</li>\n                   <li>Server host: {process.env.REACT_APP_RDFSHAPE_HOST}</li>\n                   {/*                   <li>Built with <a href=\"http://www.scala-lang.org/\">Scala</a> and <a href=\"http://www.scala-sbt.org/\">SBT</a></li> */}\n                   <li>Source code:\n                       <ul>\n                           <li><a href=\"https://github.com/labra/rdfshape-client\">Client</a></li>\n                           <li><a href=\"https://github.com/labra/rdfshape\">Server</a></li>\n                           <li><a href=\"https://github.com/labra/shaclex\">validation libraries</a></li>\n                       </ul>\n                   </li>\n                   <li><a href=\"https://github.com/labra/shaclex/issues/4\">SHEX Features</a></li>\n                   <li><a href=\"https://github.com/labra/shaclex/issues/2\">SHACL Features</a></li>\n                   <li>Info about the languages: <a href=\"http://book.validatingrdf.com\">Validating RDF data book</a></li>\n               </ul>\n       </Container>\n     );\n }\n}\n\nexport default About;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nclass Home extends React.Component {\n render() {\n     return (\n       <Container>\n         <h1>RDFShape</h1>\n           <p>RDFShape is an RDF service where you can play:</p>\n           <ul>\n               <li><a href=\"https://www.w3.org/TR/rdf11-concepts/\">RDF</a> conversion between different formats\n                   like <a href=\"http://www.w3.org/TR/turtle/\">Turtle</a> and <a href=\"http://www.w3.org/TR/json-ld/\">JSON-LD</a></li>\n               <li>RDF validation using <a href=\"http://shex.io/\">ShEx</a> (Shape Expressions) and\n                   {' '}\n                   <a href=\"https://www.w3.org/TR/shacl/\">SHACL</a> (Shapes Constraint Language)</li>\n               <li>RDF querying with <a href=\"http://www.w3.org/TR/sparql11-query/\">SPARQL</a></li>\n               <li><a href=\"http://www.w3.org/TR/rdf-schema/\">RDFS</a> and <a href=\"https://www.w3.org/TR/owl2-primer/\">OWL</a> inference</li>\n           </ul>\n       </Container>\n     );\n }\n}\n\nexport default Home;\n","import React from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport PropTypes from \"prop-types\";\n\nclass ByURL extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            urlValue: this.props.urlValue\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({urlValue: e.target.value});\n        this.props.handleUrlChange(e.target.value);\n    }\n\n  render() {\n     return (\n        <Form.Group>\n         <Form.Label>{this.props.name}</Form.Label>\n         <Form.Control\n             type=\"text\"\n             value={this.props.urlValue}\n             onChange={this.handleChange}\n             placeholder={this.props.placeholder}\n         />\n        </Form.Group>\n     );\n }\n}\n\nByURL.propTypes = {\n    name: PropTypes.string.isRequired,\n    urlValue: PropTypes.string.isRequired,\n    handleUrlChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n};\n\nByURL.defaultProps = {\n    name: '',\n    placeholder: '',\n};\n\nexport default ByURL;\n","import React from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport PropTypes from \"prop-types\";\n\nclass ByFile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedFile: null\n        };\n        this.handleFileUpload = this.handleFileUpload.bind(this);\n    }\n\n    handleFileUpload(e) {\n        this.setState({\n            selectedFile: e.target.files[0],\n            loaded: 0\n        });\n        this.props.handleFileUpload(e.target.files[0]);\n    }\n\n render() {\n     return (\n        <Form.Group>\n         <Form.Label>{this.props.name}</Form.Label>\n         <Form.Control as=\"input\"\n                       type=\"file\"\n                       onChange={this.handleFileUpload}\n         />\n        </Form.Group>\n     );\n }\n}\n\nByFile.propTypes = {\n    name: PropTypes.string.isRequired,\n    handleFileUpload: PropTypes.func.isRequired,\n};\n\nByFile.defaultProps = {\n    name: ''\n};\n\nexport default ByFile;\n","import React from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport PropTypes from \"prop-types\";\nimport InputTabs from \"./InputTabs\";\n\nclass ByText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { textAreaValue: this.props.textAreaValue };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({textAreaValue: e.target.value});\n    this.props.handleByTextChange(e.target.value);\n  }\n\n\n render() {\n     return (\n        <Form.Group>\n         <Form.Label>{this.props.name}</Form.Label>\n         <Form.Control as=\"textarea\"\n                       rows=\"3\"\n                       value={this.props.textAreaValue}\n                       onChange={this.handleChange}\n                       placeholder={this.props.placeholder}\n         />\n        </Form.Group>\n     );\n }\n}\n\nByText.propTypes = {\n    name: PropTypes.string,\n    textAreaValue: PropTypes.string,\n    handleByTextChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n};\n\nByText.defaultProps = {\n    placeholder: '',\n};\n\nexport default ByText;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport ByURL from './ByURL';\nimport ByFile from './ByFile';\nimport ByText from './ByText';\nimport PropTypes from \"prop-types\";\n\nclass InputTabs extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: this.props.activeTab\n        }\n        this.handleTabChange = this.handleTabChange.bind(this);\n    }\n\n    handleTabChange(e) {\n        console.log(`Event: ${JSON.stringify(e)}`)\n        this.setState({ activeTab: e})\n        this.props.handleTabChange(e);\n    }\n\n    render() {\n        return (\n         <Form.Group>\n          <Form.Label>{this.props.name}</Form.Label>\n          <Tabs activeKey={this.state.activeTab}\n                transition={false}\n                id=\"dataTabs\"\n                onSelect={this.handleTabChange}\n          >\n            <Tab eventKey=\"byText\" title=\"by Input\">\n            <ByText name={this.props.byTextName}\n                    textAreaValue={this.props.textAreaValue}\n                    placeholder={this.props.byTextPlaceholder}\n                    handleByTextChange={this.props.handleByTextChange}\n            />\n           </Tab>\n           <Tab eventKey=\"byURL\" title=\"By URL\">\n             <ByURL name={this.props.byURLName}\n                    urlValue={this.props.urlValue}\n                    handleUrlChange={this.props.handleUrlChange}\n                    placeholder={this.props.byUrlPlaceholder}\n             />\n           </Tab>\n           <Tab eventKey=\"byFile\" title=\"By File\">\n             <ByFile name={this.props.byFileName}\n                     handleFileUpload={this.props.handleFileUpload}\n             />\n            </Tab>\n         </Tabs>\n         </Form.Group>\n        );\n    }\n}\n\nInputTabs.propTypes = {\n    name: PropTypes.string.isRequired,\n    activeTab: PropTypes.string,\n    handleTabChange: PropTypes.func.isRequired,\n    byTextName: PropTypes.string,\n    textAreaValue: PropTypes.string,\n    handleByTextChange: PropTypes.func.isRequired,\n    byTextPlaceholder: PropTypes.string,\n    byUrlName: PropTypes.string.isRequired,\n    urlValue: PropTypes.string.isRequired,\n    handleUrlChange: PropTypes.func.isRequired,\n    byUrlPlaceholder: PropTypes.string,\n    byFileName: PropTypes.string,\n    handleFileUpload: PropTypes.func.isRequired,\n};\n\nInputTabs.defaultProps = {\n    activeTab: 'ByText',\n    byTextName: '',\n    byTextPlaceholder: '',\n    byUrlName: '',\n    byUrlPlaceholder: '',\n    byFileName: ''\n};\n\nexport default InputTabs;","import React from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\n\nclass SelectFormat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formats: [],\n            format: this.props.defaultFormat\n        }\n        this.handleFormatChange = this.handleFormatChange.bind(this);\n    }\n\n    handleFormatChange(e) {\n        console.log(e.target.value);\n        this.setState({format: e.target.value})\n        this.props.handleFormatChange(e.target.value);\n    }\n\n    componentDidMount() {\n        const url = this.props.urlFormats;\n        console.log(\"Select format URL:\" + url);\n        axios.get(url).then(response => response.data)\n            .then((data) => {\n                this.setState({ formats: data })\n                console.log(this.state.formats)\n            })\n    }\n\n    render() {\n        return (\n            <Form.Group>\n            <Form.Label>{this.props.name}</Form.Label>\n            <Form.Control as=\"select\" onChange={this.handleFormatChange}>\n                { this.state.formats.map((format,key) => (\n                    <option key={key} defaultValue={format === this.props.defaultFormat}>{format}</option>\n                ))\n                }\n            </Form.Control>\n            </Form.Group>\n        )\n    }\n}\n\nSelectFormat.propTypes = {\n    name: PropTypes.string.isRequired,\n    defaultFormat: PropTypes.string.isRequired,\n    handleFormatChange: PropTypes.func.isRequired,\n    urlFormats: PropTypes.string.isRequired,\n};\n\n\nexport default SelectFormat;\n","import React from 'react';\nimport InputTabs from \"./InputTabs\";\nimport SelectFormat from \"./SelectFormat\";\nimport PropTypes from \"prop-types\";\n\nclass InputTabsWithFormat extends React.Component {\n    render() {\n        return (\n            <div>\n            <InputTabs name={this.props.nameInputTab}\n                       activeTab={this.props.activeTab}\n                       handleTabChange={this.props.handleTabChange}\n\n                       byTextName={this.props.byTextName}\n                       textAreaValue={this.props.textAreaValue}\n                       handleByTextChange={this.props.handleByTextChange}\n                       byTextPlaceholder={this.props.byTextPlaceholder}\n\n                       byUrlName={this.props.byUrlName}\n                       urlValue={this.props.urlValue}\n                       handleUrlChange={this.props.handleUrlChange}\n                       byUrlPlaceholder={this.props.byUrlPlaceholder}\n\n                       byFileName={this.props.byFileName}\n                       handleFileUpload={this.props.handleFileUpload}\n            />\n            <SelectFormat name={this.props.nameFormat}\n                              defaultFormat={this.props.defaultFormat}\n                              handleFormatChange={this.props.handleFormatChange}\n                              urlFormats={this.props.urlFormats}\n            />\n            </div>\n        );\n    }\n}\n\nInputTabsWithFormat.propTypes = {\n    nameInputTab: PropTypes.string.isRequired,\n    activeTab: PropTypes.string,\n    handleTabChange: PropTypes.func.isRequired,\n    byTextName: PropTypes.string,\n    textAreaValue: PropTypes.string,\n    handleByTextChange: PropTypes.func.isRequired,\n    byTextPlaceholder: PropTypes.string,\n    byUrlName: PropTypes.string.isRequired,\n    urlValue: PropTypes.string.isRequired,\n    handleUrlChange: PropTypes.func.isRequired,\n    byUrlPlaceholder: PropTypes.string,\n    byFileName: PropTypes.func.isRequired,\n    handleFileUpload: PropTypes.func.isRequired,\n    nameFormat: PropTypes.string.isRequired,\n    defaultFormat: PropTypes.string.isRequired,\n    handleFormatChange: PropTypes.func.isRequired,\n    urlFormats: PropTypes.string.isRequired,\n};\n\nInputTabsWithFormat.defaultProps = {\n    activeTab: 'ByText',\n    byTextName: '',\n    byTextPlaceholder: '',\n    byUrlName: '',\n    byUrlPlaceholder: '',\n    byFileName: ''\n};\n\n\nexport default InputTabsWithFormat;","import React from 'react';\nimport InputTabsWithFormat from \"./InputTabsWithFormat\";\nimport API from \"./API\"\nimport PropTypes from 'prop-types';\nimport InputTabs from \"./InputTabs\";\n\nclass DataTabs extends React.Component {\n    render() {\n        return (\n            <div>\n            <InputTabsWithFormat\n                       nameInputTab=\"RDF data\"\n                       activeTab={this.props.activeTab}\n                       handleTabChange={this.props.handleTabChange}\n\n                       byTextName=\"RDF data\"\n                       textAreaValue={this.props.textAreaValue}\n                       textPlaceholder=\"RDF data...\"\n                       handleByTextChange={this.props.handleByTextChange}\n\n                       byUrlName=\"URL data\"\n                       handleUrlChange={this.props.handleDataUrlChange}\n                       urlValue={this.props.dataUrl}\n                       byURLPlaceholder=\"http://...\"\n\n                       byFileName=\"RDF File\"\n                       handleFileUpload={this.props.handleFileUpload}\n\n                       nameFormat=\"Data format\"\n                       defaultFormat={this.props.dataFormat}\n                       handleFormatChange={this.props.handleDataFormatChange}\n                       urlFormats={API.dataFormats}\n            />\n            </div>\n        );\n    }\n}\n\nDataTabs.propTypes = {\n    activeTab: PropTypes.string,\n    textAreaValue: PropTypes.string,\n    handleByTextChange: PropTypes.func.isRequired,\n    handleFileUpload: PropTypes.func.isRequired,\n    handleDataUrlChange: PropTypes.func.isRequired,\n    dataFormat: PropTypes.string.isRequired,\n    handleDataFormatChange: PropTypes.func.isRequired\n};\n\nDataTabs.defaultProps = {\n    activeTab: 'ByText',\n    dataFormat: 'TURTLE'\n};\n\n\nexport default DataTabs;","import React from 'react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nrequire(\"codemirror/lib/codemirror.css\");\nrequire('codemirror/mode/xml/xml.js');\nrequire('codemirror/mode/turtle/turtle.js');\nrequire('codemirror/mode/sparql/sparql.js');\n\nfunction Code(props) {\n    return <CodeMirror\n        value={props.value}\n        options={{\n            mode: props.mode,\n            theme: props.theme,\n            lineNumbers: true\n        }}\n        onChange={(editor, data, value) => {}}\n    />\n}\n\nexport default Code","import React from 'react';\nimport qs from 'query-string';\nimport Button from \"react-bootstrap/Button\";\nimport FormData from \"form-data\";\n\nexport function mkPermalink(route, params) {\n    const newUrl = getHost() + route + \"?\" + qs.stringify(params)\n    console.log(\"mkPermalink newUrl: \" + newUrl);\n    return newUrl ;\n}\n\nexport function params2Form(params) {\n    let formData = new FormData()\n    Object.keys(params).forEach(key => {\n        console.log(\"Adding to formData: \" + key + \" =>\" + params[key]);\n        formData.append(key,params[key])\n    });\n    console.log(\"FormData in mkFormData: \" + JSON.stringify(formData));\n    return formData;\n}\n\nfunction getHost() {\n    var port = window.location.port;\n    return window.location.protocol + \"//\" +\n        window.location.hostname + (port? \":\" + port: \"\") ;\n}\n\n\nexport function Permalink(props) {\n    if (props.url)\n        return <Button variant=\"secondary\" href={props.url}>Permalink</Button>\n    else\n        return null\n}","import React from 'react';\nimport {mkFormData, params2Form} from \"./Permalink\";\nimport qs from \"query-string\";\nimport Viz from 'viz.js/viz.js';\nconst { Module, render } = require('viz.js/full.render.js');\n\nfunction addPart(maybe, name) {\n    if (maybe) return \"&name=\" + maybe\n    else return '';\n}\n\nfunction *intersperse(a, delim) {\n    let first = true;\n    for (const x of a) {\n        if (!first) yield delim;\n        first = false;\n        yield x;\n    }\n}\n\nexport function dot2svg(dot,cb) {\n    console.log(\"### Dot2SVG!!!\" + dot);\n    const digraph = 'digraph { a -> b; }';\n    const viz = new Viz({ Module, render });\n    const opts = {engine: 'dot'};\n    viz.renderSVGElement(digraph, opts).then(function(svg) {\n      console.log(\"SVG converted!!\")\n      console.log(svg);\n      cb(svg);\n    });\n};\n\n\nexport function mkMode(format) {\n    if (format) {\n        switch (format.toLowerCase()) {\n            case \"turtle\":\n                return \"turtle\"\n            case \"html\":\n                return \"xml\"\n            case \"rdf/xml\":\n                return \"xml\"\n            case \"shex\":\n                return \"turtle\"\n            case \"sparql\":\n                return \"sparql\"\n            case \"rdf/json\":\n                return \"javascript\"\n            case \"shexj\":\n                return \"javascript\"\n            default:\n                return \"xml\"\n        }\n    } else return \"xml\"\n};\n\nexport function maybeAdd(maybe,name,obj) {\n    if (maybe) obj[name] = maybe ;\n    return obj;\n};\n\nexport function dataParamsFromQueryParams(params) {\n    let newParams = {};\n    if (params.data) newParams[\"data\"] = params.data ;\n    if (params.dataFormat) newParams[\"dataFormat\"] = params.dataFormat ;\n    if (params.dataUrl) newParams[\"dataUrl\"] = params.dataUrl ;\n    return newParams;\n};\n\nexport function paramsFromStateData(state) {\n    const activeTab = state.dataActiveTab;\n    const dataTextArea = state.dataTextArea;\n    const dataFormat = state.dataFormat;\n    const dataUrl = state.dataUrl;\n    const dataFile = state.dataFile;\n    let params = {}\n    params['activeTab'] = activeTab;\n    params['dataFormat'] = dataFormat;\n    switch (activeTab) {\n        case \"byText\":\n            params['data'] = dataTextArea;\n            params['dataFormatTextArea']=dataFormat;\n            break;\n        case \"byURL\":\n            params['dataURL'] = dataUrl;\n            params['dataFormatUrl']=dataFormat;\n            break;\n        case \"byFile\":\n            params['dataFile'] = dataFile;\n            params['dataFormatFile']=dataFormat;\n            break;\n        default:\n    }\n   return params;\n};\n\n\nexport function paramsFromStateQuery(state) {\n    let params = {}\n    let activeTab = state.queryActiveTab;\n    params['activeTab'] = activeTab;\n    switch (activeTab) {\n        case \"byText\":\n            params['query'] = state.queryTextArea;\n            break;\n        case \"byURL\":\n            params['queryURL'] = state.queryUrl;\n            break;\n        case \"byFile\":\n            params['queryFile'] = state.queryFile;\n            break;\n        default:\n    }\n    return params;\n};\n","import React from 'react';\nimport Code from './Code';\nimport { Permalink } from \"./Permalink\";\nimport { mkMode } from \"./Utils\";\n\nclass ResultDataInfo extends React.Component {\n constructor(props) {\n      super(props);\n      this.state = {result: this.props.result}\n }\n\n render() {\n     const result = this.props.result\n     console.log(\"ResultDataInfo ---> result: \" + JSON.stringify(result));\n     let msg ;\n     if (result === \"\") {\n         msg = null\n     } else\n     if (result.error) {\n         msg =\n             <div><p>Error: {result.error}</p>\n                 <details><pre>{JSON.stringify(result)}</pre></details>\n                </div>\n     } else {\n         console.log(\"ResultDataInfo ---> dataFormat: \" + JSON.stringify(result.dataFormat));\n         msg = <div>\n             <h2>{result.msg}</h2>\n             {result.data && result.dataFormat && (\n              <Code\n                 value={result.data}\n                 mode={mkMode(result.dataFormat)}\n                 theme=\"material\"\n              />\n             )}\n             <ul>\n                 <li>Number of statements: {result.numberStatements}</li>\n                 <li>DataFormat: <span>{result.dataFormat}</span></li>\n             </ul>\n             <details><pre>{JSON.stringify(result)}</pre></details>\n             <Permalink url={this.props.permalink} />\n         </div>\n     }\n\n     return (\n         <div>\n             {msg}\n         </div>\n     );\n }\n}\n\n\nexport default ResultDataInfo;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport API from \"./API\";\nimport axios from 'axios';\nimport Form from \"react-bootstrap/Form\";\nimport DataTabs from \"./DataTabs\";\nimport ResultDataInfo from \"./ResultDataInfo\";\nimport qs from 'query-string';\nimport {mkPermalink, params2Form} from \"./Permalink\";\nimport {paramsFromStateData, dataParamsFromQueryParams} from \"./Utils\";\n\nclass DataInfo extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataTextArea: 'RDF',\n            result: '',\n            dataFormat: \"TURTLE\",\n            dataUrl: '',\n            dataFile: null,\n            dataActiveTab: \"byText\",\n            permalink: ''\n        } ;\n     this.handleByTextChange = this.handleByTextChange.bind(this);\n     this.handleTabChange = this.handleTabChange.bind(this);\n     this.handleDataFormatChange = this.handleDataFormatChange.bind(this);\n     this.handleDataUrlChange = this.handleDataUrlChange.bind(this);\n     this.handleFileUpload = this.handleFileUpload.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleDataFormatChange(value) { this.setState({dataFormat: value}); }\n    handleTabChange(value) { this.setState({dataActiveTab: value});  }\n    handleByTextChange(value) { this.setState({dataTextArea: value});  }\n    handleDataUrlChange(value) { this.setState({dataUrl: value}); }\n    handleFileUpload(value) { this.setState({dataFile: value}); }\n\n    componentDidMount() {\n        console.log(\"Component Did mount\");\n        if (this.props.location.search) {\n            const queryParams = qs.parse(this.props.location.search);\n            console.log(\"Parameters: \" + JSON.stringify(queryParams));\n            let dataParams = dataParamsFromQueryParams(this.props.location.search);\n            const infoUrl = API.dataInfo + \"?\" + qs.stringify(dataParams);\n            console.log(\"Try to prepare request to \" + infoUrl);\n            axios.get(infoUrl).then (response => response.data)\n                .then((data) => {\n                    this.setState({ result: data });\n//                    if (params.data) this.setState({dataTextArea: params.data});\n//                    if (params.dataFormat) this.setState({dataFormat: params.dataFormat});\n//                    if (params.dataUrl) this.setState({dataUrl: params.dataUrl});\n                })\n                .catch(function (error) {\n                    console.log(\"Error calling server at \" + infoUrl + \": \" + error);\n                });\n        }\n    }\n\n    handleSubmit(event) {\n        const infoUrl = API.dataInfo;\n        console.log(\"Try to prepare request to \" + infoUrl);\n        let params = paramsFromStateData(this.state);\n        let formData = params2Form(params);\n\n        let permalink = mkPermalink(API.dataInfoRoute, params);\n        console.log(\"Permalink created: \" + JSON.stringify(permalink));\n        axios.post(infoUrl,formData).then (response => response.data)\n            .then((data) => {\n                this.setState({ result: data });\n                this.setState({ permalink: permalink });\n                console.log(this.state.result);\n            })\n            .catch(function (error) {\n                // this.setState({result: { error: \"Error calling server at \" + infoUrl + \": \" + error}});\n                console.log(\"Error calling server at \" + infoUrl + \": \" + error);\n        });\n        event.preventDefault();\n    }\n\n render() {\n     return (\n       <Container fluid={true}>\n         <h1>RDF Data info</h1>\n         <ResultDataInfo\n             result={this.state.result}\n             permalink={this.state.permalink}\n         />\n         <Form onSubmit={this.handleSubmit}>\n             <DataTabs activeTab={this.state.dataActiveTab}\n                       handleTabChange={this.handleTabChange}\n\n                       textAreaValue={this.state.dataTextArea}\n                       handleByTextChange={this.handleByTextChange}\n\n                       dataUrl={this.state.dataUrl}\n                       handleDataUrlChange={this.handleDataUrlChange}\n\n                       handleFileUpload={this.handleFileUpload}\n\n                       dataFormat={this.state.dataFormat}\n                       handleDataFormatChange={this.handleDataFormatChange}\n             />\n         <Button variant=\"primary\" type=\"submit\">Info about data</Button>\n         </Form>\n       </Container>\n     );\n }\n}\n\nexport default DataInfo;\n","import React from 'react';\nimport Code from './Code'\nimport { Permalink } from \"./Permalink\"\nimport { mkMode } from \"./Utils\"\n\n\nclass ResultDataConvert extends React.Component {\n render() {\n     const result = this.props.result\n     console.log(\"ResultDataConvert\" + JSON.stringify(result));\n     let msg ;\n     if (result === \"\") {\n         msg = null\n     } else\n     if (result.error) {\n         msg =\n             <div><p>Error: {result.error}</p>\n                 <details><pre>{JSON.stringify(result)}</pre></details>\n                </div>\n     } else {\n         msg = <div>\n             <p>{result.msg}</p>\n             {result.result && result.dataFormat && (\n                 <Code\n                     value={result.result}\n                     mode={mkMode(result.dataFormat)}\n                     theme=\"material\"\n                 />\n             )}\n             <details><pre>{JSON.stringify(result)}</pre></details>\n             <Permalink url={this.props.permalink} />\n         </div>\n     }\n\n     return (\n         <div>\n             {msg}\n         </div>\n     );\n }\n}\n\nexport default ResultDataConvert;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport DataTabs from \"./DataTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport API from \"./API\";\nimport axios from \"axios\";\nimport SelectFormat from \"./SelectFormat\";\nimport ResultDataConvert from \"./ResultDataConvert\";\nimport {maybeAdd, dataParamsFromQueryParams, paramsFromStateData} from \"./Utils\";\nimport qs from \"query-string\";\nimport {mkPermalink, params2Form} from \"./Permalink\";\nimport InputTabsWithFormat from \"./InputTabsWithFormat\";\n\nclass DataConvert extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataTextArea: 'RDF',\n            result: '',\n            dataFormat: \"TURTLE\",\n            dataUrl: '',\n            dataFile: null,\n            dataActiveTab: \"byText\",\n            permalink: '',\n            targetDataFormat: 'TURTLE'\n        };\n        this.handleByTextChange = this.handleByTextChange.bind(this);\n        this.handleTabChange = this.handleTabChange.bind(this);\n        this.handleDataFormatChange = this.handleDataFormatChange.bind(this);\n        this.handleDataUrlChange = this.handleDataUrlChange.bind(this);\n        this.handleFileUpload = this.handleFileUpload.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleTargetDataFormatChange = this.handleTargetDataFormatChange.bind(this);\n    }\n\n    handleTabChange(value) { this.setState({dataActiveTab: value}); }\n    handleByTextChange(value) { this.setState({dataTextArea: value}); }\n    handleDataFormatChange(value) {  this.setState({dataFormat: value}); }\n    handleDataUrlChange(value) { this.setState({dataUrl: value}); }\n    handleFileUpload(value) { this.setState({dataFile: value}); }\n    handleTargetDataFormatChange(value) { this.setState({targetDataFormat: value}); }\n\n    componentDidMount() {\n        console.log(\"Component Did mount - dataConvert\");\n        if (this.props.location.search) {\n            const queryParams = qs.parse(this.props.location.search);\n            console.log(\"Parameters: \" + JSON.stringify(queryParams));\n            let newParams = dataParamsFromQueryParams(queryParams);\n            maybeAdd(queryParams.targetDataFormat,\"targetDataFormat\", newParams);\n            const infoUrl = API.dataConvert + \"?\" + qs.stringify(newParams);\n            console.log(\"Preparing request to \" + infoUrl);\n            axios.get(infoUrl).then (response => response.data)\n                .then((data) => {\n                    this.setState({ result: data });\n                    this.setState({ permalink: infoUrl });\n                    if (newParams.data) { this.setState({dataTextArea: newParams.data}) }\n                    if (newParams.dataFormat) { this.setState({dataFormat: newParams.dataFormat}) }\n                    if (newParams.dataUrl) { this.setState({dataUrl: newParams.dataUrl}) }\n                    if (newParams.targetDataFormat) { this.setState({targetDataFormat: newParams.targetDataFormat}) }\n                })\n                .catch(function (error) {\n                    console.log(\"Error calling server at \" + infoUrl + \": \" + error);\n                });\n        }\n    }\n\n    handleSubmit(event) {\n        const url = API.dataConvert;\n        console.log(\"Try to prepare request to \" + url);\n        let params = paramsFromStateData(this.state);\n        let formData = params2Form(params);\n        formData.append('targetDataFormat', this.state.targetDataFormat);\n        params['targetDataFormat'] = this.state.targetDataFormat ;\n        let permalink = mkPermalink(API.dataConvertRoute, params);\n        axios.post(url,formData).then (response => response.data)\n            .then((data) => {\n                this.setState({ result: data })\n                this.setState({ permalink: permalink });\n                console.log(this.state.result);\n            })\n            .catch(function (error) {\n                console.log('Error doing server request')\n                console.log(error);\n            });\n\n        event.preventDefault();\n    }\n\n render() {\n     return (\n       <Container fluid={true}>\n         <h1>Convert RDF data</h1>\n           <Form onSubmit={this.handleSubmit}>\n               <DataTabs activeTab={this.state.dataActiveTab}\n                         handleTabChange={this.handleTabChange}\n\n                         textAreaValue={this.state.dataTextArea}\n                         handleByTextChange={this.handleByTextChange}\n\n                         dataUrl={this.state.dataUrl}\n                         handleDataUrlChange={this.handleDataUrlChange}\n\n                         handleFileUpload={this.handleFileUpload}\n\n                         dataFormat={this.state.dataFormat}\n                         handleDataFormatChange={this.handleDataFormatChange}\n               />\n               <SelectFormat name=\"Target data format\"\n                             defaultFormat={this.state.targetDataFormat}\n                             handleFormatChange={this.handleTargetDataFormatChange}\n                             urlFormats={API.dataFormats}\n               />\n               <Button variant=\"primary\" type=\"submit\">Convert data</Button>\n           </Form>\n           <ResultDataConvert\n               result={this.state.result}\n               permalink={this.state.permalink}\n           />\n       </Container>\n     );\n }\n}\n\nexport default DataConvert;\n","import React from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport axios from 'axios';\nimport API from \"./API\"\n\nclass SelectGraphFormat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formats: [],\n            selected: this.props.default\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({selected: e.target.value})\n        this.props.handleChange(e.target.value);\n    }\n\n    componentDidMount() {\n        const url = API.dataVisualFormats;\n        axios.get(url).then(response => response.data)\n            .then((data) => {\n                this.setState({ formats: data })\n                console.log(this.state.formats)\n            })\n    }\n\n    render() {\n        return (\n            <Form.Group>\n            <Form.Label>{this.props.name}</Form.Label>\n            <Form.Control as=\"select\" onChange={this.handleChange}>\n                { this.state.formats.map((format,key) => (\n                    <option key={key}>{format}</option>\n                 ))\n                }\n            </Form.Control>\n            </Form.Group>\n        )\n    }\n}\n\nexport default SelectGraphFormat;\n","import React from 'react';\n\nclass ShowSVG extends React.Component {\n\n    render() {\n        return <div className=\"SVG\" border=\"1\"\n                    dangerouslySetInnerHTML={{__html: this.props.svg}}\n        />\n    }\n}\n\nexport default ShowSVG;\n","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport API from \"./API\";\nimport DataTabs from \"./DataTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport SelectGraphFormat from \"./SelectGraphFormat\";\nimport {paramsFromStateData} from \"./Utils\";\nimport {mkPermalink, params2Form} from \"./Permalink\";\nimport qs from \"query-string\";\nimport ShowSVG from \"./ShowSVG\";\nimport Viz from 'viz.js/viz.js';\nconst {Module, render} = require('viz.js/full.render.js');\n\nclass DataVisualize extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataTextArea: '',\n            result: '',\n            dataFormat: \"TURTLE\",\n            dataUrl: '',\n            dataFile: null,\n            dataActiveTab: \"byText\",\n            permalink: '',\n            targetGraphFormat: 'SVG',\n            svg: null,\n        };\n        this.handleByTextChange = this.handleByTextChange.bind(this);\n        this.handleTabChange = this.handleTabChange.bind(this);\n        this.handleDataFormatChange = this.handleDataFormatChange.bind(this);\n        this.handleDataUrlChange = this.handleDataUrlChange.bind(this);\n        this.handleFileUpload = this.handleFileUpload.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleTargetGraphFormatChange = this.handleTargetGraphFormatChange.bind(this);\n        this.processData = this.processData.bind(this);\n    }\n\n    handleTabChange(value) { this.setState({dataActiveTab: value}); }\n    handleByTextChange(value) { this.setState({dataTextArea: value});    }\n    handleDataUrlChange(value) { this.setState({dataUrl: value}); }\n    handleFileUpload(value) { this.setState({dataFile: value}); }\n    handleDataFormatChange(value) { this.setState({dataFormat: value}); }\n    handleTargetGraphFormatChange(value) {  this.setState({targetGraphFormat: value});   }\n\n\n/* To handle query params   componentDidMount() {\n        console.log(\"Component Did mount - dataConvert\");\n        if (this.props.location.search) {\n            const queryParams = qs.parse(this.props.location.search);\n            console.log(\"Parameters: \" + JSON.stringify(queryParams));\n            let newParams = dataParamsFromQueryParams(queryParams);\n            maybeAdd(queryParams.targetDataFormat,\"targetDataFormat\", newParams);\n            const url = API.dataVisualize + \"?\" + qs.stringify(newParams);\n            console.log(\"Preparing request to \" + url);\n            axios.get(url).then (response => response.data)\n                .then((data) => {\n                    this.setState({ result: data });\n                    this.setState({ permalink: url });\n                    if (newParams.data) { this.setState({dataTextArea: newParams.data}) }\n                    if (newParams.dataFormat) { this.setState({dataFormat: newParams.dataFormat}) }\n                    if (newParams.dataUrl) { this.setState({dataUrl: newParams.dataUrl}) }\n                    if (newParams.targetDataFormat) { this.setState({targetDataFormat: newParams.targetDataFormat}) }\n                })\n                .catch(function (error) {\n                    console.log(\"Error calling server at \" + url + \": \" + error);\n                });\n        }\n    } */\n\n    processData(data, targetFormat) {\n       this.convertDot(data.result,'dot','SVG')\n    }\n\n    handleSubmit(event) {\n        const url = API.dataConvert;\n        console.log(\"Try to prepare request to \" + url);\n        let params = paramsFromStateData(this.state);\n        let formData = params2Form(params);\n        const targetFormat = this.state.targetGraphFormat ;\n        formData.append('targetDataFormat', 'dot'); // It converts to dot in the server\n        params['targetDataFormat'] = targetFormat ; // But it keeps the original target format for permalink\n        let permalink = mkPermalink(API.dataVisualizeRoute, params);\n        axios.post(url,formData).then (response => response.data)\n            .then((data) => {\n                this.processData(data)\n/*                if (originalTargetFormat === \"JSON\") {\n                    this.setState({json: data})\n                }\n                console.log(\"DataVisualize Before state change\");\n                console.log(this.state.result);\n                this.setState({ result: data, permalink: permalink });\n                console.log(\"DataVisualize Before after result change\");\n                console.log(this.state.result); */\n            })\n            .catch(function (error) {\n                console.log('Error doing server request')\n                console.log(error);\n            });\n\n        event.preventDefault();\n    }\n\n    convertDot(dot, engine, format) {\n        let viz = new Viz({Module, render});\n        const opts = {engine: 'dot'};\n        viz.renderSVGElement(dot, opts).then(svg => {\n            this.setState({\n                svg: svg.outerHTML\n            });\n        }).catch(error => {\n            // Create a new Viz instance (@see Caveats page for more info)\n            viz = new Viz({Module, render});\n            this.setState({error: \"<p>\" + error + \"</p>\"})\n            console.error(error);\n        });\n    }\n\n\n render() {\n     const targetGraphFormat = this.state.targetGraphFormat\n     return (\n       <Container fluid={true}>\n         <h1>Visualize RDF data</h1>\n         <ShowSVG svg={this.state.svg}/>\n         <Form onSubmit={this.handleSubmit}>\n               <DataTabs activeTab={this.state.dataActiveTab}\n                         handleTabChange={this.handleTabChange}\n\n                         textAreaValue={this.state.dataTextArea}\n                         handleByTextChange={this.handleByTextChange}\n\n                         dataUrl={this.state.dataUrl}\n                         handleDataUrlChange={this.handleDataUrlChange}\n\n                         handleFileUpload={this.handleFileUpload}\n\n                         dataFormat={this.state.dataFormat}\n                         handleDataFormatChange={this.handleDataFormatChange}\n               />\n             <SelectGraphFormat name=\"Graph format\"\n                               default={this.state.graphFormat}\n                               handleChange={this.handleTargetGraphFormatChange}\n             />\n         <Button variant=\"primary\" type=\"submit\">Visualize</Button>\n         </Form>\n       </Container>\n     );\n }\n}\n\nexport default DataVisualize;\n","import Cytoscape from 'cytoscape';\n// import COSEBilkent from 'cytoscape-cose-bilkent';\nimport React from 'react';\nimport CytoscapeComponent from 'react-cytoscapejs';\n\n/*\nCytoscape.use(COSEBilkent);\n*/\n\nfunction Cyto(props) {\n    const style2 = { width: '80vw', height: '80vh', backgroundColor: 'rgb(250, 250, 250)' }\n    const style = {width: '100%', height: '1000px', border: 'solid'}\n    const layout = { name: props.layoutName };\n    console.log(\"render() Layout: \" + layout);\n    return <CytoscapeComponent\n        elements={props.elements}\n        style={style2}\n        layout={layout}\n    />\n}\n\nexport default Cyto;\n","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport API from \"./API\";\nimport DataTabs from \"./DataTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport {paramsFromStateData} from \"./Utils\";\nimport {mkPermalink, params2Form} from \"./Permalink\";\nimport Cyto from \"./Cyto\";\nimport Pace from 'react-pace-progress';\n\nconst cose = \"cose\"\nconst random = \"random\"\n\n\nclass CytoVisualize extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            error: null,\n            dataTextArea: '',\n            result: '',\n            dataFormat: \"TURTLE\",\n            dataUrl: '',\n            dataFile: null,\n            dataActiveTab: \"byText\",\n            permalink: '',\n            elements: [],\n            layoutName: random\n        };\n        this.changeLayout = this.changeLayout.bind(this);\n        this.handleByTextChange = this.handleByTextChange.bind(this);\n        this.handleTabChange = this.handleTabChange.bind(this);\n        this.handleDataFormatChange = this.handleDataFormatChange.bind(this);\n        this.handleDataUrlChange = this.handleDataUrlChange.bind(this);\n        this.handleFileUpload = this.handleFileUpload.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.processData = this.processData.bind(this);\n    }\n\n    handleTabChange(value) { console.log(`#### Tab Change dataActiveTab ${value}`); this.setState({dataActiveTab: value}); }\n    handleByTextChange(value) { this.setState({dataTextArea: value});    }\n    handleDataUrlChange(value) { this.setState({dataUrl: value}); }\n    handleFileUpload(value) { this.setState({dataFile: value}); }\n    handleDataFormatChange(value) { this.setState({dataFormat: value}); }\n\n\n/*    componentDidMount() {\n        console.log(\"Component Did mount - dataConvert\");\n        if (this.props.location.search) {\n            const queryParams = qs.parse(this.props.location.search);\n            console.log(\"Parameters: \" + JSON.stringify(queryParams));\n            let newParams = dataParamsFromQueryParams(queryParams);\n            maybeAdd(queryParams.targetDataFormat,\"targetDataFormat\", newParams);\n            const url = API.dataVisualize + \"?\" + qs.stringify(newParams);\n            console.log(\"Preparing request to \" + url);\n            axios.get(url).then (response => response.data)\n                .then((data) => {\n                    this.setState({ result: data });\n                    this.setState({ permalink: url });\n                    if (newParams.data) { this.setState({dataTextArea: newParams.data}) }\n                    if (newParams.dataFormat) { this.setState({dataFormat: newParams.dataFormat}) }\n                    if (newParams.dataUrl) { this.setState({dataUrl: newParams.dataUrl}) }\n                    if (newParams.targetDataFormat) { this.setState({targetDataFormat: newParams.targetDataFormat}) }\n                })\n                .catch(function (error) {\n                    console.log(\"Error calling server at \" + url + \": \" + error);\n                });\n        }\n    } */\n\n    processData(data,permalink) {\n      console.log(\"Elements \" + data.result);\n      const elements = JSON.parse(data.result)\n      this.setState({\n            result: data,\n            permalink: permalink,\n            elements: elements\n        });\n    }\n\n    handleSubmit(event) {\n        const url = API.dataConvert;\n        let params = paramsFromStateData(this.state);\n        let formData = params2Form(params);\n        console.log(`CytoVisualize state: ${JSON.stringify(this.state)}`)\n        console.log(`CytoVisualize submit params: ${JSON.stringify(params)}`)\n        let permalink = mkPermalink(API.cytoVisualizeRoute, params);\n        formData.append('targetDataFormat', \"JSON\"); // Converts to JSON elements which are visualized by Cytoscape\n        this.setState({loading:true});\n        axios.post(url,formData).then (response => response.data)\n            .then((data) => {\n                this.processData(data,permalink)\n                this.setState({loading:false});\n            })\n            .catch(function (error) {\n                this.setState({loading:false});\n                this.setState({error:error});\n                console.log('Error doing server request')\n                console.log(error);\n            });\n\n        event.preventDefault();\n    }\n\n changeLayout(e) {\n        console.log(\"Change layout: \" + e.target.value);\n        this.setState({layoutName: e.target.value});\n        e.preventDefault();\n    }\n\n render() {\n     const targetGraphFormat = this.state.targetGraphFormat\n     return (\n       <Container fluid={true}>\n         <h1>Visualize RDF data</h1>\n         {this.state.isLoading ? <Pace color=\"#27ae60\"/> :\n            <Cyto elements={this.state.elements}\n                  layoutName={this.state.layoutName}\n            />\n         }\n         <Form onSubmit={this.handleSubmit}>\n               <DataTabs activeTab={this.state.dataActiveTab}\n                         handleTabChange={this.handleTabChange}\n\n                         textAreaValue={this.state.dataTextArea}\n                         handleByTextChange={this.handleByTextChange}\n\n                         dataUrl={this.state.dataUrl}\n                         handleDataUrlChange={this.handleDataUrlChange}\n\n                         handleFileUpload={this.handleFileUpload}\n\n                         dataFormat={this.state.dataFormat}\n                         handleDataFormatChange={this.handleDataFormatChange}\n               />\n         <Button variant=\"primary\" type=\"submit\">Visualize</Button>\n             <Form.Group>\n                 <Button variant=\"secondary\" onClick={this.changeLayout} value=\"cose\">COSE Layaout</Button>\n                 <Button variant=\"secondary\" onClick={this.changeLayout} value=\"random\">Random</Button>\n                 <Button variant=\"secondary\" onClick={this.changeLayout} value=\"circle\">Circle</Button>\n             </Form.Group>\n         </Form>\n       </Container>\n     );\n }\n}\n\nexport default CytoVisualize;\n","import React from 'react';\nimport InputTabs from \"./InputTabs\";\nimport PropTypes from \"prop-types\";\n\nclass QueryTabs extends React.Component {\n    render() {\n        return (\n            <div>\n                <InputTabs name=\"SPARQL\"\n                           activeTab={this.props.activeTab}\n                           handleTabChange={this.props.handleTabChange}\n\n                           byTextName=\"Input Query\"\n                           textAreaValue={this.props.textAreaValue}\n                           handleByTextChange={this.props.handleByTextChange}\n                           byTextPlaceholder=\"SELECT...\"\n\n                           byUrlName=\"URL query\"\n                           urlValue={this.props.urlValue}\n                           handleUrlChange={this.props.handleUrlChange}\n                           byUrlPlaceholder=\"http://...\"\n\n                           byFileName=\"Query file\"\n                           handleFileUpload={this.props.handleFileUpload}\n\n                />\n            </div>\n        );\n    }\n}\n\nQueryTabs.propTypes = {\n    activeTab: PropTypes.string,\n    textAreaValue: PropTypes.string,\n    handleByTextChange: PropTypes.func.isRequired,\n    urlValue: PropTypes.string,\n    handleDataUrlChange: PropTypes.func.isRequired,\n    handleFileUpload: PropTypes.func.isRequired,\n};\n\nQueryTabs.defaultProps = {\n    textAreaValue: '',\n    urlValue: '',\n    activeTab: 'ByText'\n};\n\nexport default QueryTabs;","import React from 'react';\n\n\nclass ResultQuery extends React.Component {\n render() {\n     const result = this.props.result\n     console.log(\"ResultQuery\" + JSON.stringify(result));\n     let msg ;\n     if (result === \"\") {\n         msg = null\n     } else\n     if (result.error) {\n         msg =\n             <div><p>Error: {result.error}</p>\n                 <details><pre>{JSON.stringify(result)}</pre></details>\n                </div>\n     } else {\n         msg = <div>\n             <p>{result.msg}</p>\n             <details><pre>{JSON.stringify(result)}</pre></details>\n         </div>\n     }\n\n     return (\n         <div>\n             {msg}\n         </div>\n     );\n }\n}\n\n\nexport default ResultQuery;\n","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport API from \"./API\";\nimport DataTabs from \"./DataTabs\"\nimport QueryTabs from \"./QueryTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport ResultQuery from \"./ResultQuery\";\nimport {paramsFromStateData, paramsFromStateQuery} from \"./Utils\";\nimport {params2Form} from \"./Permalink\";\n\nclass DataQuery extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: '',\n\n            dataActiveTab: \"byText\",\n            dataTextArea: \"\",\n            dataUrl: '',\n            dataFile: '',\n            dataFormat: \"TURTLE\",\n\n            queryActiveTab: \"byText\",\n            queryTextArea: \"\",\n            queryUrl: '',\n            queryFile: '',\n        } ;\n\n        this.handleTabChangeData = this.handleTabChangeData.bind(this);\n        this.handleByTextChangeData = this.handleByTextChangeData.bind(this);\n        this.handleUrlChangeData = this.handleUrlChangeData.bind(this);\n        this.handleFileUpload = this.handleFileUpload.bind(this);\n\n        this.handleDataFormatChange = this.handleDataFormatChange.bind(this);\n\n        this.handleByTextChangeQuery = this.handleByTextChangeQuery.bind(this);\n        this.handleTabChangeQuery = this.handleTabChangeQuery.bind(this);\n        this.handleUrlChangeQuery = this.handleUrlChangeQuery.bind(this);\n        this.handleFileUpload = this.handleFileUpload.bind(this);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    handleTabChangeData(value) { this.setState({dataActiveTab: value}); }\n    handleByTextChangeData(value) { this.setState({dataTextArea: value}); }\n    handleUrlChangeData(value) { this.setState({dataUrl: value}); }\n    handleFileUpload(value) { this.setState({dataFile: value}); }\n\n    handleDataFormatChange(value) { this.setState({dataFormat: value});  }\n\n    handleTabChangeQuery(value) { this.setState({queryActiveTab: value}); }\n    handleByTextChangeQuery(value) { this.setState({queryTextArea: value});  }\n    handleUrlChangeQuery(value) { this.setState({queryUrl: value}); }\n    handleFileUploadQuery(value) { this.setState({queryFile: value}); }\n\n    handleSubmit(event) {\n        const infoUrl = API.dataQuery;\n        let paramsData = paramsFromStateData(this.state);\n        console.log(`DataQuery paramsData: ${JSON.stringify(paramsData)}`)\n        let paramsQuery = paramsFromStateQuery(this.state);\n        console.log(`DataQuery paramsQuery: ${JSON.stringify(paramsQuery)}`)\n        let params = {...paramsData,...paramsQuery}\n        console.log(`DataQuery submit params: ${JSON.stringify(params)}`)\n        let form = params2Form(params);\n        axios.post(infoUrl,form).then (response => response.data)\n            .then((data) => {\n                this.setState({ result: data })\n                console.log(this.state.result);\n            })\n            .catch(function (error) {\n                console.log('Error doing server request')\n                console.log(error);\n            });\n\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <Container fluid={true}>\n                <h1>Data Query</h1>\n                <ResultQuery result={this.state.result} />\n                <Form onSubmit={this.handleSubmit}>\n                    <DataTabs activeTab={this.state.dataActiveTab}\n                              handleTabChange={this.handleTabChangeData}\n\n                              textAreaValue={this.state.dataTextArea}\n                              handleByTextChange={this.handleByTextChangeData}\n\n                              dataUrl={this.state.dataUrl}\n                              handleDataUrlChange={this.handleUrlChangeData}\n\n                              handleFileUpload={this.handleDataFileUploadData}\n\n                              dataFormat={this.state.dataFormat}\n                              handleDataFormatChange={this.handleFormatChangeData}\n                    />\n                    <QueryTabs activeTab={this.state.queryActiveTab}\n                              handleTabChange={this.handleTabChangeQuery}\n\n                              textAreaValue={this.state.queryTextArea}\n                              handleByTextChange={this.handleByTextChangeQuery}\n\n                              urlValue={this.state.queryUrl}\n                              handleDataUrlChange={this.handleUrlChangeQuery}\n\n                              handleFileUpload={this.handleFileUploadQuery}\n                    />\n                    <Button variant=\"primary\" type=\"submit\">Query</Button>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default DataQuery;\n","import React from 'react';\nimport Form from \"react-bootstrap/Form\";\n\nclass NodeSelector extends React.Component {\n\n render() {\n     return (\n        <Form.Group>\n         <Form.Label>Node selector</Form.Label>\n         <Form.Control type=\"text\" placeholder={this.props.placeholder} />\n        </Form.Group>\n     );\n }\n}\n\nexport default NodeSelector;\n","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport API from \"./API\";\nimport Form from \"react-bootstrap/Form\";\nimport FormData from \"form-data\";\nimport axios from \"axios\";\nimport ResultDataInfo from \"./ResultDataInfo\";\nimport DataTabs from \"./DataTabs\";\nimport NodeSelector from \"./NodeSelector\";\n\nclass DataExtract extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textAreaValue: \"\",\n            textAreaValueQuery: \"\",\n            result: '',\n            dataFormat: \"TURTLE\",\n            dataUrl: '',\n            dataFile: '',\n            activeTab: \"byText\",\n            activeTabQuery: \"byText\"\n        } ;\n        this.handleByTextChange = this.handleByTextChange.bind(this);\n        this.handleTabChange = this.handleTabChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDataFormatChange = this.handleDataFormatChange.bind(this);\n    }\n\n    handleDataFormatChange(value) {\n        this.setState({dataFormat: value});\n    }\n\n    handleTabChange(value) {\n        console.log(\"Changed tab...\" + value);\n        this.setState({dataActiveTab: value});\n    }\n\n    handleByTextChange(value) {\n        this.setState({dataTextArea: value});\n    }\n\n    handleSubmit(event) {\n        const infoUrl = API.dataExtract;\n        const textAreaValue = this.state.textAreaValue;\n        const activeTab = this.state.activeTab;\n        const dataFormat = this.state.dataFormat;\n        console.log(\"textAreaValue \" + textAreaValue);\n        console.log(\"activeTab \" + activeTab);\n        let formData = new FormData();\n        formData.append('data', textAreaValue);\n        formData.append('dataFormat', dataFormat);\n        console.log(\"Form data created\");\n        axios.post(infoUrl,formData).then (response => response.data)\n            .then((data) => {\n                this.setState({ result: data })\n                console.log(this.state.result);\n            })\n            .catch(function (error) {\n                console.log('Error doing server request')\n                console.log(error);\n            });\n\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <Container fluid={true}>\n                <h1>Extract schema from data</h1>\n                <ResultDataInfo result={this.state.result} />\n                <Form onSubmit={this.handleSubmit}>\n                    <DataTabs textAreaValue={this.state.textAreaValue}\n                              activeTab={this.state.activeTab}\n                              handleTabChange={this.handleTabChange}\n                              handleByTextChange={this.handleByTextChange}\n                              defaultDataFormat={this.state.dataFormat}\n                              handleDataFormatChange={this.handleDataFormatChange}\n                    />\n                    <NodeSelector />\n                    <Button variant=\"primary\" type=\"submit\">Extract schema</Button>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default DataExtract;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nclass EndpointInput extends React.Component {\n    render() {\n        return (\n            <Form.Group>\n                <Form.Label>Endpoint</Form.Label>\n                <Form.Control as=\"input\"\n                              type=\"url\"\n                              placeholder=\"http://...\"\n                              onChange={this.props.handleChange}\n                />\n            </Form.Group>\n        );\n    }\n}\n\nexport default EndpointInput;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport EndpointTabs from \"./EndpointInput\";\n\nclass EndpointInfo extends React.Component {\n\n    render() {\n     return (\n       <Container fluid={true}>\n         <h1>Endpoint info</h1>\n           <Form onSubmit={this.handleSubmit}>\n               <EndpointTabs/>\n              <Button variant=\"primary\" type=\"submit\">Info about endpoint</Button>\n           </Form>\n       </Container>\n     );\n }\n}\n\nexport default EndpointInfo;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport EndpointInput from \"./EndpointInput\";\nimport QueryTabs from \"./QueryTabs\";\nimport API from \"./API\";\nimport FormData from \"form-data\";\nimport axios from \"axios\";\nimport ResultQuery from \"./ResultQuery\";\n\n\nclass EndpointQuery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: '',\n            endpointUrl: '',\n            queryTextArea: '',\n            queryUrl: '',\n            queryFile: '',\n            activeTab: \"ByText\"\n        } ;\n\n        this.handleEndpointChange = this.handleEndpointChange.bind(this);\n        this.handleByTextChange = this.handleByTextChange.bind(this);\n        this.handleTabChange = this.handleTabChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleTabChange(value) {\n        console.log(\"Changed tab...\" + value);\n        this.setState({dataActiveTab: value});\n    }\n\n    handleByTextChange(value) {\n        this.setState({queryTextArea: value});\n    }\n\n    handleSubmit(event) {\n        const infoUrl = API.endpointQuery;\n        console.log(\"Try to prepare request to \" + infoUrl);\n        const queryTextArea = this.state.queryTextArea;\n        const activeTab = this.state.activeTab;\n        let formData = new FormData();\n        formData.append('query', queryTextArea);\n        formData.append('endpoint', this.state.endpointUrl);\n        console.log(\"Form data created\");\n        axios.post(infoUrl,formData).then (response => response.data)\n            .then((data) => {\n                this.setState({ result: data })\n                console.log(this.state.result);\n            })\n            .catch(function (error) {\n                console.log('Error doing server request')\n                console.log(error);\n            });\n        event.preventDefault();\n    }\n\n    handleEndpointChange(value) {\n        this.setState({endpointUrl: value});\n    }\n\n    render() {\n     return (\n       <Container fluid={true}>\n         <h1>Endpoint query</h1>\n           <Form onSubmit={this.handleSubmit}>\n               <EndpointInput onChange={this.handleEndpointChange}/>\n               <QueryTabs activeTab={this.state.activeTab}\n                          textAreaValue={this.state.queryTextArea}\n                          handleByTextChange={this.handleByTextChange}\n                          handleTabChange={this.handleTabChange}\n               />\n               <Button variant=\"primary\" type=\"submit\">Info about endpoint</Button>\n               <ResultQuery result={this.state.result} />\n           </Form>\n       </Container>\n     );\n }\n}\n\nexport default EndpointQuery;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport EndpointTabs from \"./EndpointInput\";\n\nclass EndpointExtract extends React.Component {\n render() {\n     return (\n       <Container fluid={true}>\n         <h1>Extract schema from Endpoint node</h1>\n           <Form onSubmit={this.handleSubmit}>\n              <EndpointTabs/>\n              <Button variant=\"primary\">Extract schema from endpoint Node</Button>\n           </Form>\n       </Container>\n     );\n }\n}\n\nexport default EndpointExtract;\n","import React from 'react';\nimport InputTabsWithFormat from \"./InputTabsWithFormat\";\nimport API from \"./API\";\n\nclass ShExTabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleByTextChange = this.handleByTextChange.bind(this);\n        this.handleTabChange = this.handleTabChange.bind(this);\n        this.handleFormatChange = this.handleFormatChange.bind(this);\n    }\n\n    handleByTextChange(e) {\n        this.props.handleByTextChange(e.target.value);\n    }\n\n    handleTabChange(e) {\n        this.props.handleTabChange(e.target.value);\n    }\n\n    handleFormatChange(e) {\n        this.props.handleShExFormatChange(e.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <InputTabsWithFormat\n                    name=\"ShEx schema\"\n                    activeTab={this.props.activeTab}\n                    textAreaValue={this.props.textAreaValue}\n                    byTextPlaceholder=\"<Shape> {...\"\n                    handleByTextChange={this.props.handleByTextChange}\n                    handleTabChange={this.props.handleTabChange}\n                    byURLPlaceholder=\"http://...\"\n                    nameFormat=\"ShEx format\"\n                    defaultFormat={this.props.shExFormat}\n                    handleFormatChange={this.props.handleShExFormatChange}\n                    urlFormats={API.shExFormats}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ShExTabs;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport ShExTabs from \"./ShExTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass ShExInfo extends React.Component {\n render() {\n     return (\n       <Container fluid={true}>\n         <h1>Info about ShEx schema</h1>\n           <Form onSubmit={this.handleSubmit}>\n               <ShExTabs/>\n              <Button variant=\"primary\">Info</Button>\n           </Form>\n       </Container>\n     );\n }\n}\n\nexport default ShExInfo;\n","import React from 'react';\nimport InputTabsWithFormat from \"./InputTabsWithFormat\";\nimport API from \"./API\";\n\nclass ShapeMapTabs extends React.Component {\n    render() {\n        return (\n            <InputTabsWithFormat\n                name=\"ShapeMap\"\n                activeTab={this.props.activeTab}\n                textAreaValue={this.props.textAreaValue}\n                byTextPlaceholder=\"<node>@<Shape>,...\"\n                handleByTextChange={this.props.handleByTextChange}\n                handleTabChange={this.props.handleTabChange}\n                byURLPlaceholder=\"http://...\"\n                nameFormat=\"ShapeMap format\"\n                defaultFormat={this.props.shapeMapFormat}\n                handleFormatChange={this.props.handleShapeMapFormatChange}\n                urlFormats={API.shapeMapFormats}\n            />\n        );\n    }\n}\n\nexport default ShapeMapTabs;","import React from 'react';\n\nclass ResultValidate extends React.Component {\n render() {\n     const result = this.props.result\n     console.log(\"ResultQuery\" + JSON.stringify(result));\n     let msg ;\n     if (result === \"\") {\n         msg = null\n     } else\n     if (result.error) {\n         msg =\n             <div><p>Error: {result.error}</p>\n                 <details><pre>{JSON.stringify(result)}</pre></details>\n                </div>\n     } else {\n         msg = <div>\n             <p>{result.msg}</p>\n             <ul>\n                 <li>Number of statements: {result.numberStatements}</li>\n                 <li>Data: <pre>{result.data}</pre></li>\n                 <li>DataFormat: <span>{result.dataFormat}</span></li>\n             </ul>\n             <details><pre>{JSON.stringify(result)}</pre></details>\n         </div>\n     }\n\n     return (\n         <div>\n             {msg}\n         </div>\n     );\n }\n}\n\nexport default ResultValidate;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport DataTabs from \"./DataTabs\"\nimport ShExTabs from \"./ShExTabs\"\nimport ShapeMapTabs from \"./ShapeMapTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport API from \"./API\";\nimport FormData from \"form-data\";\nimport axios from \"axios\";\nimport ResultValidate from \"./ResultValidate\";\n\nclass ShExValidate extends React.Component {\n  constructor(props) {\n        super(props);\n        this.state = {\n            result: '',\n\n            dataTextArea: \"\",\n            dataFormat: \"TURTLE\",\n            dataUrl: '',\n            dataFile: '',\n            dataActiveTab: \"byText\",\n\n            shExTextArea: \"\",\n            shExFormat: \"ShExC\",\n            shExUrl: \"\",\n            shExFile: \"\",\n            shExActiveTab: 'byText',\n\n            shapeMapTextArea: '',\n            shapeMapFormat: \"Compact\",\n            shapeMapUrl: \"\",\n            shapeMapFile: \"\",\n            shapeMapActiveTab: \"byText\"\n        } ;\n\n      this.changeDataTextArea = this.changeDataTextArea.bind(this);\n      this.changeDataTab = this.changeDataTab.bind(this);\n      this.changeDataFormat = this.changeDataFormat.bind(this);\n\n      this.changeShExTextArea = this.changeShExTextArea.bind(this);\n      this.changeShExTab = this.changeShExTab.bind(this);\n      this.changeShExFormat = this.changeShExFormat.bind(this);\n\n      this.changeShapeMapTextArea = this.changeShapeMapTextArea.bind(this);\n      this.changeShapeMapTab = this.changeShapeMapTab.bind(this);\n      this.changeShapeMapFormat = this.changeShapeMapFormat.bind(this);\n\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeDataTextArea(value) { this.setState({dataTextArea: value}); }\n    changeDataTab(value)      { this.setState({dataActiveTab: value}); }\n    changeDataFormat(value)   { this.setState({dataFormat: value}); }\n\n    changeShExTextArea(value) { this.setState({shExTextArea: value}); }\n    changeShExTab(value)      { this.setState({shExActiveTab: value}); }\n    changeShExFormat(value)   { this.setState({shExFormat: value}); }\n\n    changeShapeMapTextArea(value) { this.setState({shapeMapTextArea: value}); }\n    changeShapeMapTab(value)      { this.setState({shapeMapActiveTab: value}); }\n    changeShapeMapFormat(value)   { this.setState({shapeMapFormat: value}); }\n\n    handleSubmit(event) {\n        const infoUrl = API.schemaValidate ;\n        console.log(\"Try to prepare request to \" + infoUrl);\n        let formData = new FormData();\n        formData.append('dataTextArea', this.state.dataTextArea);\n        formData.append('dataFormat', this.state.dataFormat);\n        formData.append('dataUrl', this.state.dataUrl);\n        formData.append('dataActiveTab', this.state.dataActiveTab);\n\n        formData.append('schemaEngine', \"ShEx\");\n        formData.append(\"triggerMode\", \"shapeMap\");\n        formData.append('schema', this.state.shExTextArea);\n        formData.append('schemaFormat', this.state.shExFormat);\n        formData.append('schemaUrl', this.state.shExUrl);\n        formData.append('schemaActiveTab', this.state.shExActiveTab);\n\n        formData.append('shapeMap', this.state.shapeMapTextArea);\n        formData.append('shapeMapFormat', this.state.shapeMapFormat);\n        formData.append('shapeMapUrl', this.state.shapeMapUrl);\n        formData.append('shapeMapActiveTab', this.state.shapeMapActiveTab);\n\n        console.log(\"Form data created\");\n        axios.post(infoUrl,formData).then (response => response.data)\n            .then((data) => {\n                this.setState({ result: data })\n                console.log(this.state.result);\n            })\n            .catch(function (error) {\n                console.log('Error doing server request')\n                console.log(error);\n            });\n\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <Container fluid={true}>\n                <h1>ShEx: Validate RDF data</h1>\n                <Form onSubmit={this.handleSubmit}>\n                    <DataTabs textAreaValue={this.state.textAreaValue}\n                              activeTab={this.state.activeTab}\n                              dataFormat={this.state.dataFormat}\n                              handleDataFormatChange={this.changeDataFormat}\n                              handleTabChange={this.changeDataTab}\n                              handleByTextChange={this.changeDataTextArea}\n                    />\n                    <ShExTabs textAreaValue={this.state.shExTextArea}\n                              activeTab={this.state.shExActiveTab}\n                              shExFormat={this.state.shExFormat}\n                              handleShExFormatChange={this.changeShExFormat}\n                              handleTabChange={this.changeShExTab}\n                              handleByTextChange={this.changeShExTextArea}\n                    />\n                    <ShapeMapTabs\n                        textAreaValue={this.props.shapeMapTextArea}\n                        activeTab={this.state.shExActiveTab}\n                        shapeMapFormat={this.state.shapeMapFormat}\n                        handleShapeMapFormatChange={this.changeShapeMapFormat}\n                        handleTabChange={this.changeShapeMapTab}\n                        handleByTextChange={this.changeShapeMapTextArea}\n                    />\n                    <Button variant=\"primary\" type=\"submit\">Validate</Button>\n                    <ResultValidate result={this.state.result} />\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default ShExValidate;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport ShExTabs from \"./ShExTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass ShExConvert extends React.Component {\n render() {\n     return (\n       <Container>\n         <h1>Convert ShEx formats</h1>\n           <Form onSubmit={this.handleSubmit}>\n               <ShExTabs/>\n              <Button variant=\"primary\">Convert</Button>\n           </Form>\n       </Container>\n     );\n }\n}\n\nexport default ShExConvert;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport ShExTabs from \"./ShExTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass ShExVisualize extends React.Component {\n render() {\n     return (\n       <Container>\n         <h1>Visualize ShEx schema</h1>\n           <Form onSubmit={this.handleSubmit}>\n               <ShExTabs/>\n              <Button variant=\"primary\">Visualize</Button>\n           </Form>\n       </Container>\n     );\n }\n}\n\nexport default ShExVisualize;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport ShExTabs from \"./ShExTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass ShEx2SHACL extends React.Component {\n render() {\n     return (\n       <Container>\n         <h1>ShEx &#8594; SHACL</h1>\n           <Form onSubmit={this.handleSubmit}>\n               <ShExTabs/>\n              <Button variant=\"primary\">Convert</Button>\n           </Form>\n       </Container>\n     );\n }\n}\n\nexport default ShEx2SHACL;\n","import React from 'react';\nimport InputTabs from \"./InputTabs\";\n\nclass SHACLTabs extends React.Component {\n    render() {\n        return (\n            <InputTabs name=\"SHACL Shapes graph\"\n                       byTextPlaceholder=\"RDF data\"\n                       byURLPlaceholder=\"http://...\"\n            />\n        );\n    }\n}\n\nexport default SHACLTabs;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport SHACLTabs from \"./SHACLTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SHACLInfo extends React.Component {\n render() {\n     return (\n       <Container>\n         <h1>Info about SHACL schema</h1>\n           <Form onSubmit={this.handleSubmit}>\n               <SHACLTabs/>\n              <Button variant=\"primary\">Get Info</Button>\n           </Form>\n       </Container>\n     );\n }\n}\n\nexport default SHACLInfo;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport DataTabs from \"./DataTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SHACLValidate extends React.Component {\n render() {\n     return (\n       <Container>\n         <h1>Validate RDF data with SHACL</h1>\n           <Form onSubmit={this.handleSubmit}>\n               <DataTabs/>\n              <Button variant=\"primary\">Validate</Button>\n           </Form>\n       </Container>\n     );\n }\n}\n\nexport default SHACLValidate;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport DataTabs from \"./DataTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SHACLConvert extends React.Component {\n render() {\n     return (\n       <Container>\n         <h1>Convert between SHACL formats</h1>\n           <Form onSubmit={this.handleSubmit}>\n               <DataTabs/>\n              <Button variant=\"primary\">Validate</Button>\n           </Form>\n       </Container>\n     );\n }\n}\n\nexport default SHACLConvert;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport SHACLTabs from \"./SHACLTabs\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SHACL2ShEx extends React.Component {\n render() {\n     return (\n       <Container>\n         <h1>SHACL &#8594; ShEx</h1>\n           <Form onSubmit={this.handleSubmit}>\n               <SHACLTabs/>\n              <Button variant=\"primary\">Convert</Button>\n           </Form>\n       </Container>\n     );\n }\n}\n\nexport default SHACL2ShEx;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Alert from \"react-bootstrap/Alert\";\n\nclass WikidataValidate extends React.Component {\n render() {\n     return (\n       <Container>\n         <h1>Validate Wikidata entity</h1>\n           <Alert variant=\"danger\">\n               Not implemented yet\n           </Alert>\n       </Container>\n     );\n }\n}\n\nexport default WikidataValidate;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Alert from \"react-bootstrap/Alert\";\n\nclass WikidataQuery extends React.Component {\n render() {\n     return (\n       <Container>\n         <h1>Query Wikidata</h1>\n           <Alert variant=\"danger\">\n               Not implemented yet\n           </Alert>\n       </Container>\n     );\n }\n}\n\nexport default WikidataQuery;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Alert from \"react-bootstrap/Alert\";\n\nclass WikidataExtract extends React.Component {\n render() {\n     return (\n       <Container>\n         <h1>Extract schema from Wikidata entity</h1>\n           <Alert variant=\"danger\">\n               Not implemented yet\n           </Alert>\n       </Container>\n     );\n }\n}\n\nexport default WikidataExtract;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NotFound from './NotFound.js';\nimport About from './About.js';\nimport Home from './Home.js';\n\nimport DataInfo from './DataInfo.js';\nimport DataConvert from './DataConvert.js';\nimport DataVisualize from './DataVisualize.js';\nimport CytoVisualize from './CytoVisualize.js';\nimport DataQuery from './DataQuery.js';\nimport DataExtract from './DataExtract.js';\n\nimport EndpointInfo from './EndpointInfo.js';\nimport EndpointQuery from './EndpointQuery.js';\nimport EndpointExtract from './EndpointExtract.js';\n\nimport ShExInfo from './ShExInfo.js';\nimport ShExValidate from './ShExValidate.js';\nimport ShExConvert from './ShExConvert.js';\nimport ShExVisualize from './ShExVisualize.js';\nimport ShEx2SHACL from './ShEx2SHACL.js';\n\nimport SHACLInfo from './SHACLInfo.js';\nimport SHACLValidate from './SHACLValidate.js';\nimport SHACLConvert from './SHACLConvert.js';\nimport SHACL2ShEx from './SHACL2ShEx.js';\n\nimport WikidataValidate from './WikidataValidate.js';\nimport WikidataQuery from './WikidataQuery.js';\nimport WikidataExtract from './WikidataExtract.js';\nimport API from './API.js'\n\nfunction Routes() {\n\n  return (\n      <Router>\n      <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path={API.dataInfoRoute} component={DataInfo} />\n      <Route path={API.dataConvertRoute} component={DataConvert} />\n      <Route path={API.dataVisualizeRoute} component={DataVisualize} />\n      <Route path={API.cytoVisualizeRoute} component={CytoVisualize} />\n      <Route path={API.dataQueryRoute} component={DataQuery} />\n      <Route path={API.dataQueryRoute} component={DataExtract} />\n\n      <Route path={API.endpointInfoRoute} component={EndpointInfo} />\n      <Route path={API.endpointQueryRoute} component={EndpointQuery} />\n      <Route path={API.endpointExtractRoute} component={EndpointExtract} />\n\n      <Route path={API.shExValidateRoute} component={ShExValidate} />\n      <Route path={API.shExInfoRoute} component={ShExInfo} />\n      <Route path={API.shExVisualizeRoute} component={ShExVisualize} />\n      <Route path={API.shExConvertRoute} component={ShExConvert} />\n      <Route path={API.shEx2ShaclRoute} component={ShEx2SHACL} />\n\n      <Route path={API.shaclInfoRoute} component={SHACLInfo} />\n      <Route path={API.shaclValidateRoute} component={SHACLValidate} />\n      <Route path={API.shaclConvertRoute} component={SHACLConvert} />\n      <Route path={API.shacl2ShExRoute} component={SHACL2ShEx} />\n\n      <Route path={API.wikidataQueryRoute} component={WikidataQuery} />\n      <Route path={API.wikidataValidateRoute} component={WikidataValidate} />\n      <Route path={API.wikidataExtractRoute} component={WikidataExtract} />\n      <Route path={API.aboutRoute} component={About} />\n\n      <Route component={NotFound} />\n      </Switch>\n     </Router>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport './App.css';\nimport RDFShapeNavbar from \"./RDFShapeNavbar\";\nimport Container from 'react-bootstrap/Container';\nimport Routes from './Routes.js';\nimport Cyto from './Cyto.js';\n\nfunction App() {\n\n  return (\n      <Container fluid={true}>\n        <RDFShapeNavbar />\n        <Routes />\n      </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}